{% extends 'base/ace-base.html' %}
{% load i18n %}
{% load staticfiles %}
{% load bootstrap3 %}

{% block title %}上传身份证图片{% endblock %}
{% block add_head %}
<link rel="stylesheet" type="text/css" href="{% static 'assets/guillotine/css/jquery.guillotine.css' %}" />

{% endblock %}
{% block content %}
<div class="page-header">
	<h1>上传身份证图片</h1>
</div>
<!-- /.page-header -->
<form action="" method="post" enctype="multipart/form-data">
	<div class="row">
		<div class="well well-sm">
			根据中国海关最新规定，为配合进口货物查验，证明包裹物品确系个人自用，办理海关入境清关手续时需要提交收件人身份证明。海关相关规定请参考 <a
				href="http://www.customs.gov.cn/publish/portal0/tab517/info265077.htm"
				target="_blank"> 《中华人民共和国海关对进出境快件监管办法》 <i
				class="fa fa-external-link bigger-110"></i>
			</a> 第二十二条，或致电海关咨询：12360。<br /> <b>注意：字体头像还有身份证有效期必须要清晰可辨。</b><br />
			韵达快递承诺妥善保存所有信息，直接提交给海关进行查验，绝不用做其它途径，其他任何人均无法查看。
		</div>
		{% csrf_token %}
		<div class="form-group">
			{{ form.name.errors }} <label for="{{ form.name.id_for_label }}">姓名：</label>
			{{ form.name }} <span id="name-span" class='hidden'></span>
		</div>

		<div class="form-group">
			{{ form.moblie.errors }} <label for="{{ form.mobile.id_for_label }}">手机号码：</label>
			{{ form.mobile }} <span id="mobile-span" class='hidden'></span>
		</div>

		<div class="form-group">
			{{ form.number.errors }} <label for="{{ form.number.id_for_label }}">身份证号码：</label>
			{{ form.number }} <span id="number-span" class='hidden'></span>
		</div>

		<div class="form-group hidden">
			{{ form.shenfenzheng1.errors }} <label
				for="{{ form.shenfenzheng1.id_for_label }}">shenfenzheng1</label> {{
			form.shenfenzheng1 }}
		</div>

		<div class="form-group hidden">
			{{ form.shenfenzheng2.errors }} <label
				for="{{ form.shenfenzheng2.id_for_label }}">shenfenzheng2</label> {{
			form.shenfenzheng2 }}
		</div>


	</div>
	<div class="row">
		<div class="hr hr16 hr-dotted"></div>
		<div class="form-group">
			<button type="submit" class="btn btn-danger btn-sm">确定图片清晰并提交</button>

		</div>
	</div>
</form>

<div class="row">
	<div class="hr hr16 hr-dotted"></div>
	<div class="btn btn-sm btn-danger btn-file">
		<i class="ace-icon fa fa-folder-open"></i> 点击选择正面图片..
		<input id="sfz-zm-file" class="" type="file" accept="image/*">
	</div>
	<div class="space-2"></div>
</div>
<div class="row" id="gt-sfz-zm-box">
</div>

<div class="row">
    <div class="hr hr16 hr-dotted"></div>
    <div class="btn btn-sm btn-danger btn-file">
        <i class="ace-icon fa fa-folder-open"></i> 点击选择反面图片..
        <input id="sfz-fm-file" class="" type="file" accept="image/*">
    </div>
    <div class="space-2"></div>
</div>
<div class="row" id="gt-sfz-fm-box">
</div>
<div class="row">
    <div class="hr hr16 hr-dotted"></div>
    <div class="form-group">
        <button type="submit" class="btn btn-danger btn-sm" id="crop">Crop</button>

    </div>
</div>
<div class="row" id="test">
    <div class="hr hr16 hr-dotted"></div>

</div>
{% endblock %} {% block footer-script %}

<script type="text/javascript"
	src="{% static 'assets/guillotine/js/jquery.guillotine.js' %}"></script>
<script type="text/javascript">
$.extend({
  getUrlVars: function(){
    var vars = [], hash;
    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
    for(var i = 0; i < hashes.length; i++)
    {
      hash = hashes[i].split('=');
      vars.push(hash[0]);
      vars[hash[0]] = hash[1];
    }
    return vars;
  },
  getUrlVar: function(name){
    return $.getUrlVars()[name];
  }
});
var standard_w=600, standard_h=380;
var has_sfz1;
var has_sfz2;
function readImage(input, img_frame) {
    if ( input.files && input.files[0] ) {
        var FR= new FileReader();
        FR.onload = function(e) {
             $(img_frame).attr( "src", e.target.result );
             console.log(e.target.result);
        };       
        FR.readAsDataURL( input.files[0] );
    }
}

function isImage(file_name){
    file_name_array=file_name.split('.');
    file_ex=file_name_array[file_name_array.length-1];
    file_ex=file_ex.toLowerCase();
    if (file_ex=='jpeg' || file_ex=='jpg' || file_ex=='png' || file_ex=='gif') {
        return true;
    }else{
        console.log('no image');
    }
}
var sfz_zm_image = new Image();
var sfz_fm_image= new Image();
jQuery(function($){
    var html="<div id='gt-sfz-fm' class='gt-content'><div class='gt-frame'></div><div class='gt-controls'><button id='rotate_left' type='button' title='Rotate left'>";
	html+="<i class='ace-icon fa fa-rotate-left'></i></button><button id='zoom_out' type='button' title='Zoom out'><i class='ace-icon fa fa-search-minus'></i>";
	html+="</button><button id='fit' type='button' title='Fit image'><i class='ace-icon fa fa-arrows-alt'></i></button>";
	html+="<button id='zoom_in' type='button' title='Zoom in'><i class='ace-icon fa fa-search-plus'></i></button><button id='rotate_right' type='button' title='Rotate right'>";
	html+="<i class='ace-icon fa fa-rotate-right'></i></button></div></div>"
	var $zm_box;
	var $fm_box;
    $("#sfz-zm-file").change(function(){
        console.log($(this).val());
        file_name=$(this).val();
        if (isImage(file_name)==true){
            //readImage( this,'#sfz-zm-pic');
            var file=this.files[0];
            var FR= new FileReader();
	        FR.onload = function(e) {
	             url=e.target.result;	             
	             // init guillotime
	             $zm_box=$(html);
	             var $picture=$("<img src='"+url+"'></img>");
	             $zm_box.find('.gt-frame').append($picture);
	             $('#gt-sfz-zm-box').empty();
	             $('#gt-sfz-zm-box').append($zm_box);
	             $picture.guillotine({eventOnChange: 'guillotinechange', width: standard_w, height: standard_h});
	             
	             // Bind button actions
		         $zm_box.find('#rotate_left').click(function(){ $picture.guillotine('rotateLeft'); });
		         $zm_box.find('#rotate_right').click(function(){ $picture.guillotine('rotateRight'); });
		         $zm_box.find('#fit').click(function(){ $picture.guillotine('fit'); });
		         $zm_box.find('#zoom_in').click(function(){ $picture.guillotine('zoomIn'); });
		         $zm_box.find('#zoom_out').click(function(){ $picture.guillotine('zoomOut'); });
		         // end Bind button actions	             
	             // end init guillotime
	        };       
	        FR.readAsDataURL(file);
	        
	        
        }
        
    });
    
    $("#sfz-fm-file").change(function(){
        console.log($(this).val());
        file_name=$(this).val();
        if (isImage(file_name)==true){
            //readImage( this,'#sfz-fm-pic');
            var file=this.files[0];
            var FR= new FileReader();
            FR.onload = function(e) {
                 url=e.target.result;
                 // init guillotime
                 $fm_box=$(html);
                 var $picture=$("<img src='"+url+"'></img>");
                 $fm_box.find('.gt-frame').append($picture);
                 $('#gt-sfz-fm-box').empty();
                 $('#gt-sfz-fm-box').append($zm_box);
                 $picture.guillotine({eventOnChange: 'guillotinechange', width: standard_w, height: standard_h});
                 
                 // Bind button actions
                 $fm_box.find('#rotate_left').click(function(){ $picture.guillotine('rotateLeft'); });
                 $fm_box.find('#rotate_right').click(function(){ $picture.guillotine('rotateRight'); });
                 $fm_box.find('#fit').click(function(){ $picture.guillotine('fit'); });
                 $fm_box.find('#zoom_in').click(function(){ $picture.guillotine('zoomIn'); });
                 $fm_box.find('#zoom_out').click(function(){ $picture.guillotine('zoomOut'); });
                 // end Bind button actions              
                 // end init guillotime
            };       
            FR.readAsDataURL(file);           
        }
        
    });
    
    // guillotine zhengmian
    var $sfz_zm_pic = $('#sfz-zm-pic');

    // Make sure the image is completely loaded before calling the plugin
    $sfz_zm_pic.on('load', function(){
      // Initialize plugin (with custom event)
      $sfz_zm_pic.guillotine('remove');
      $sfz_zm_pic.guillotine({eventOnChange: 'guillotinechange', width: standard_w, height: standard_h});

      // Display inital data
      var data = $sfz_zm_pic.guillotine('getData');
      for(var key in data) { $('#zm-'+key).html(data[key]); }

      // Bind button actions
      $('#zm-rotate_left').click(function(){ $sfz_zm_pic.guillotine('rotateLeft'); });
      $('#zm-rotate_right').click(function(){ $sfz_zm_pic.guillotine('rotateRight'); });
      $('#zm-fit').click(function(){ $sfz_zm_pic.guillotine('fit'); });
      $('#zm-zoom_in').click(function(){ $sfz_zm_pic.guillotine('zoomIn'); });
      $('#zm-zoom_out').click(function(){ $sfz_zm_pic.guillotine('zoomOut'); });

      // Update data on change
      $sfz_zm_pic.on('guillotinechange', function(ev, data, action) {
        data.scale = parseFloat(data.scale.toFixed(4));
        for(var k in data) { $('#zm-'+k).html(data[k]); }
      });
    });

    // Make sure the 'load' event is triggered at least once (for cached images)
    if ($sfz_zm_pic.prop('complete')) $sfz_zm_pic.trigger('load')
    // end guillotine zhengmian
    
    // guillotine fanmian
    var $sfz_fm_pic = $('#sfz-fm-pic');

    // Make sure the image is completely loaded before calling the plugin
    $sfz_fm_pic.on('load', function(){
      // Initialize plugin (with custom event)
      $sfz_fm_pic.guillotine('remove');
      $('#fm-rotate_left').unbind( "click" );
      $('#fm-rotate_right').unbind( "click" );
      $('#fm-fit').unbind( "click" );
      $('#fm-zoom_in').unbind( "click" );
      $('#fm-zoom_out').unbind( "click" );
      $sfz_fm_pic.guillotine({eventOnChange: 'guillotinechange', width: standard_w, height: standard_h});

      // Display inital data
      var data = $sfz_fm_pic.guillotine('getData');
      for(var key in data) { $('#fm-'+key).html(data[key]); }

      // Bind button actions
      $('#fm-rotate_left').click(function(){ $sfz_fm_pic.guillotine('rotateLeft'); });
      $('#fm-rotate_right').click(function(){ $sfz_fm_pic.guillotine('rotateRight'); });
      $('#fm-fit').click(function(){ $sfz_fm_pic.guillotine('fit'); });
      $('#fm-zoom_in').click(function(){ $sfz_fm_pic.guillotine('zoomIn'); });
      $('#fm-zoom_out').click(function(){ $sfz_fm_pic.guillotine('zoomOut'); });

      // Update data on change
      $sfz_fm_pic.on('guillotinechange', function(ev, data, action) {
        data.scale = parseFloat(data.scale.toFixed(4));
        for(var k in data) { $('#fm-'+k).html(data[k]); }
      });
    });

    // Make sure the 'load' event is triggered at least once (for cached images)
    if ($sfz_fm_pic.prop('complete')) $sfz_fm_pic.trigger('load')
    // end guillotine fanmian
    var TO_RADIANS = Math.PI/180; 
	function drawRotatedImage(image, x, y, angle) { 
	 
	    // save the current co-ordinate system 
	    // before we screw with it
	    context.save(); 
	 
	    // move to the middle of where we want to draw our image
	    context.translate(x, y);
	 
	    // rotate around that point, converting our 
	    // angle from degrees to radians 
	    context.rotate(angle * TO_RADIANS);
	 
	    // draw it up and to the left by half the width
	    // and height of the image 
	    context.drawImage(image, -(image.width/2), -(image.height/2));
	 
	    // and restore the co-ords to how they were when we began
	    context.restore(); 
	}
    function getImageBase64(image,data){
        var canvas=$('<canvas width="'+standard_w+'" height="'+standard_h+'"></canvas>')[0];
        var ctx=canvas.getContext('2d');
        var natural_w=image.naturalWidth;
        var natural_h=image.naturalHeight;
        if (data.angle==0){
            var sx=data.x/data.scale;
            var sy=data.y/data.scale;
            var sw=standard_w/data.scale;
            var sh=standard_h/data.scale;
            ctx.drawImage(image,sx,sy,sw,sh,0,0,standard_w,standard_h);
            
        }else if (data.angle==90){
            ctx.save();
            var ssx=data.x/data.scale;
            var ssy=data.y/data.scale;
            var ssw=standard_w/data.scale;
            var ssh=standard_h/data.scale;
            sx=ssy;
            sy=natural_h-ssx-ssw;
            sw=ssh;
            sh=ssw;
            ctx.rotate(90*Math.PI/180);
            ctx.drawImage(image,sx,sy,sw,sh,0,-standard_w,standard_h,standard_w);
            ctx.restore();
                    
        }else if (data.angle==180){
            ctx.save();
            var ssx=data.x/data.scale;
            var ssy=data.y/data.scale;
            var ssw=standard_w/data.scale;
            var ssh=standard_h/data.scale;
            sx=natural_w-ssx-ssw;
            sy=natural_h-ssy-ssh;
            sw=ssw;
            sh=ssh;
            ctx.rotate(180*Math.PI/180);
            ctx.drawImage(image,sx,sy,sw,sh,-standard_w,-standard_h,standard_w,standard_h);
            ctx.restore();
                    
        }else if (data.angle==270){
            ctx.save();
            var ssx=data.x/data.scale;
            var ssy=data.y/data.scale;
            var ssw=standard_w/data.scale;
            var ssh=standard_h/data.scale;
            sx=natural_w-ssy-ssh;
            sy=ssx;
            sw=ssh;
            sh=ssw;
            ctx.rotate(270*Math.PI/180);
            ctx.drawImage(image,sx,sy,sw,sh,0-standard_h,0,standard_h,standard_w);
            ctx.restore();
            
        }
        $("#test").append(canvas);
        return canvas.toDataURL();
        
    }
    
    // crop pic
    $("#crop").click(function(){
        var data = $sfz_zm_pic.guillotine('getData');
        console.log(data);
        console.log(sfz_zm_image);
        base64url=getImageBase64(sfz_zm_image, data);
        console.log(base64url);
    });
    // end crop pic
        
    var name=$.getUrlVar('name');
    var number=$.getUrlVar('number');
    var mobile=$.getUrlVar('mobile');
    if (name){
        $('#id_name').val(decodeURI(name)).addClass('hidden');
        $('#name-span').removeClass('hidden').html(decodeURI(name));
        }
    if (number){
        $('#id_number').val(decodeURI(number)).addClass('hidden');
        $('#number-span').removeClass('hidden').html(decodeURI(number));
        }
    if (mobile){
        $('#id_mobile').val(decodeURI(mobile)).addClass('hidden');
        $('#mobile-span').removeClass('hidden').html(decodeURI(mobile));
        }        
});
</script>

{% endblock %}
